syntax = "proto3";

package saas.api.account.resourcev1;

// 多语言特定包名，用于源代码引用
option go_package           = "github.com/go-micro-saas/service-api/api/account-service/v1/resources;resourcev1";
option java_multiple_files  = true;
option java_package         = "saas.api.account.resourcev1";
option java_outer_classname = "SaasApiAccountResourceV1";

import "github.com/ikaiguang/go-srv-kit/kit/page/page.kit.proto";
import "api/account-service/v1/enums/account.enum.v1.proto";
import "validate/validate.proto";

// User 用户
message User {
  // id ID
  uint64 id = 1;
  // created_time 创建时间
  string created_time = 2;
  // updated_time 最后修改时间
  string updated_time = 3;
  // deleted_time 删除时间
  uint64 deleted_time = 4;
  // user_id uid
  uint64 user_id = 5;
  // user_phone 手机
  string user_phone = 6;
  // user_email 邮箱
  string user_email = 7;
  // user_nickname 昵称
  string user_nickname = 8;
  // user_avatar 头像
  string user_avatar = 9;
  // user_gender 性别；0：INIT，1：MALE，2：FEMALE，3：SECRET
  enumv1.UserGenderEnum.UserGender user_gender = 10;
  // user_status 状态；0：INIT，1：ENABLE，2：DISABLE，3：WHITELIST，4：BLACKLIST，5：DELETED
  enumv1.UserStatusEnum.UserStatus user_status = 12;
  // register_type 注册类型；0：INIT，1：EMAIL，2：MOBILE，3：。。。参考ENUM定义
  // enumv1.UserRegisterTypeEnum.UserRegisterType register_type = 11;
  // disable_time 禁用时间
  //  uint64 disable_time = 13;
  // blacklist_time 黑名单时间
  //  uint64 blacklist_time = 14;
  // password_hash 密码HASH
  //  string password_hash = 15;
}

message GetUserInfoReq {
  uint64 user_id = 1 [(validate.rules).uint64 = { gt: 0 }];
}
message GetUserInfoResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  AccountInfo data = 100;
}
message AccountInfo {
  string created_time                                        = 2;   // 创建时间
  uint64 user_id                                             = 5;   // uid
  string user_phone                                          = 6;   // 手机
  string user_email                                          = 7;   // 邮箱
  string user_nickname                                       = 8;   // 昵称
  string user_avatar                                         = 9;   // 头像
  enumv1.UserGenderEnum.UserGender user_gender               = 10;  // 性别；0：INIT，1：MALE，2：FEMALE，3：SECRET
  enumv1.UserStatusEnum.UserStatus user_status               = 11;  // 状态；0：INIT，1：ENABLE，2：DISABLE，3：WHITELIST，4：BLACKLIST，5：DELETED
  enumv1.UserRegisterTypeEnum.UserRegisterType register_type = 12;  // 注册类型；0：INIT，1：EMAIL，2：MOBILE，3：。。。参考ENUM定义
  uint64 disable_time                                        = 13;  // 禁用时间
}

message GetUserInfoListReq {
  repeated uint64 user_ids = 1 [(validate.rules).repeated = { min_items: 1 }];
}
message GetUserInfoListResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  repeated AccountInfo data = 100;
}

// UserListReq list
message UserListReq {
  kit.page.pagepkg.PageRequest page_request = 1;

  repeated uint64 user_ids = 2;
  string contact_email     = 3;
  string contact_phone     = 4;
}
message UserListResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  UserListRespData data = 100;
}
message UserListRespData {
  repeated User list                      = 1;
  kit.page.pagepkg.PageResponse page_info = 2;
}

// UserProcessResult process result
message UserProcessResult {
  bool is_success = 1;
}

message CreateUserReq {
  string user_phone                            = 1 [(validate.rules).string = { pattern: "^1[1-9]\\d{9}$" }];  // 电话
  string user_email                            = 2 [(validate.rules).string = { email: true }];                // 邮箱
  string user_nickname                         = 3 [(validate.rules).string = { ignore_empty: true }];         // 昵称
  string user_avatar                           = 4 [(validate.rules).string = { ignore_empty: true }];         // 头像
  enumv1.UserGenderEnum.UserGender user_gender = 5 [(validate.rules).enum = { not_in: [ 0 ] }];                // 性别；0：INIT，1：MALE，2：FEMALE，3：SECRET
  enumv1.UserStatusEnum.UserStatus user_status = 6 [(validate.rules).enum = { not_in: [ 0 ] }];                // 状态；0：INIT，1：ENABLE，2：DISABLE，3：WHITELIST，4：BLACKLIST，5：DELETED
  string password                              = 7 [(validate.rules).string = { pattern: "^.{6,}$" }];         // md5(密码)
}
message CreateUserByEmailReq {
  string user_email                            = 2 [(validate.rules).string = { email: true }];         // 邮箱
  string user_nickname                         = 3 [(validate.rules).string = { ignore_empty: true }];  // 昵称
  string user_avatar                           = 4 [(validate.rules).string = { ignore_empty: true }];  // 头像
  enumv1.UserGenderEnum.UserGender user_gender = 5 [(validate.rules).enum = { not_in: [ 0 ] }];         // 性别；0：INIT，1：MALE，2：FEMALE，3：SECRET
  enumv1.UserStatusEnum.UserStatus user_status = 6 [(validate.rules).enum = { not_in: [ 0 ] }];         // 状态；0：INIT，1：ENABLE，2：DISABLE，3：WHITELIST，4：BLACKLIST，5：DELETED
  string password                              = 7 [(validate.rules).string = { pattern: "^.{6,}$" }];  // md5(密码)
}
message CreateUserByPhoneReq {
  string user_phone                            = 2 [(validate.rules).string = { pattern: "^1[1-9]\\d{9}$" }];  // 电话
  string user_nickname                         = 3 [(validate.rules).string = { ignore_empty: true }];         // 昵称
  string user_avatar                           = 4 [(validate.rules).string = { ignore_empty: true }];         // 头像
  enumv1.UserGenderEnum.UserGender user_gender = 5 [(validate.rules).enum = { not_in: [ 0 ] }];                // 性别；0：INIT，1：MALE，2：FEMALE，3：SECRET
  enumv1.UserStatusEnum.UserStatus user_status = 6 [(validate.rules).enum = { not_in: [ 0 ] }];                // 状态；0：INIT，1：ENABLE，2：DISABLE，3：WHITELIST，4：BLACKLIST，5：DELETED
  string password                              = 7 [(validate.rules).string = { pattern: "^.{6,}$" }];         // md5(密码)
}
message CreateUserResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  AccountInfo data = 100;
}

message CreateOrGetUserResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  CreateOrGetUserRespData data = 100;
}
message CreateOrGetUserRespData {
  AccountInfo data = 1;
  bool is_create   = 2;
}
