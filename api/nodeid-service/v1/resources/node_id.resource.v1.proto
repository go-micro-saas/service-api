syntax = "proto3";

package saas.api.nodeid.resourcev1;

option go_package           = "github.com/go-micro-saas/nodeid-service/api/nodeid-service/v1/resources;resourcev1";
option java_multiple_files  = true;
option java_package         = "saas.api.nodeid.resourcev1";
option java_outer_classname = "SaasApiNodeidResourceV1";

import "google/api/field_behavior.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

import "api/nodeid-service/v1/enums/node_id.enum.v1.proto";

message PingReq {
  // message
  string message = 1 [(google.api.field_behavior) = REQUIRED, (validate.rules).string = { min_len: 1 }];
}

message PingResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  PingRespData data = 100;
}

message PingRespData {
  string message = 1;
}

message GetServiceInfoReq {
}

message GetServiceInfoResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  GetServiceInfoRespData data = 100;
}

message GetServiceInfoRespData {
  uint64 min_node_id                          = 1;  // 最小节点；默认：1
  uint64 max_node_id                          = 2;  // 最大节点；默认：1023
  google.protobuf.Duration idle_duration      = 3;  // 空闲释放时间；默认：100s。
  google.protobuf.Duration heartbeat_interval = 4;  // 心跳续订延长的时间；默认：30s。范围：[1, idle_duration]；延长有效期：now()+idle_duration
}

message GetNodeIdReq {
  string instance_id           = 1 [(validate.rules).string = { min_len: 1, max_len: 255 }];  // 实例ID
  string instance_name         = 2 [(validate.rules).string = { max_len: 255 }];              // 实例名称
  map<string, string> metadata = 3 [(validate.rules).map = { ignore_empty: true }];           // 实例元数据
}

message GetNodeIdResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  GetNodeIdRespData data = 100;
}

message GetNodeIdRespData {
  uint64 id                                             = 1;  // ID
  string instance_id                                    = 2;  // 实例ID
  string instance_name                                  = 3;  // 实例名称
  int64 node_id                                         = 4;  // 节点id
  saas.api.nodeid.enumv1.NodeIDStatusEnum.Status status = 5;  // 节点状态
  google.protobuf.Timestamp expired_at                  = 6;  // 失效时间；默认：now()+100s
  google.protobuf.Duration heartbeat_interval           = 7;  // 心跳续订间隔时间；默认：30s
}

message RenewalNodeIdReq {
  uint64 id          = 1 [(validate.rules).uint64 = { gt: 0 }];                     // ID；用于验证指定ID节点
  string instance_id = 2 [(validate.rules).string = { min_len: 1, max_len: 255 }];  // 实例ID
  int64 node_id      = 3 [(validate.rules).int64 = { gt: 0 }];                      // 节点id
}

message RenewalNodeIdResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  RenewalNodeIdRespData data = 100;
}

message RenewalNodeIdRespData {
  saas.api.nodeid.enumv1.NodeIDStatusEnum.Status status = 1;  // 节点状态
  google.protobuf.Timestamp expired_at                  = 2;  // 失效时间；默认：now()+100s
}

message ReleaseNodeIdReq {
  uint64 id          = 1 [(validate.rules).uint64 = { gt: 0 }];                     // ID；用于验证指定ID节点
  string instance_id = 2 [(validate.rules).string = { min_len: 1, max_len: 255 }];  // 实例ID
  int64 node_id      = 3 [(validate.rules).int64 = { gt: 0 }];                      // 节点id
}

message ReleaseNodeIdResp {
  int32 code                   = 1;
  string reason                = 2;
  string message               = 3;
  map<string, string> metadata = 4;

  ReleaseNodeIdRespData data = 100;
}

message ReleaseNodeIdRespData {
  saas.api.nodeid.enumv1.NodeIDStatusEnum.Status status = 1;  // 节点状态
  google.protobuf.Timestamp expired_at                  = 2;  // 失效时间；默认：now()+100s
}