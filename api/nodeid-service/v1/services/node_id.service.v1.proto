syntax = "proto3";

package saas.api.nodeid.servicev1;

option go_package           = "github.com/go-micro-saas/nodeid-service/api/nodeid-service/v1/services;servicev1";
option java_multiple_files  = true;
option java_package         = "saas.api.nodeid.servicev1";
option java_outer_classname = "SaasApiNodeidServiceV1";

import "google/api/annotations.proto";
import "api/nodeid-service/v1/resources/node_id.resource.v1.proto";

// SrvNodeIDV1 service
service SrvNodeIDV1 {
  // ping
  rpc Ping(saas.api.nodeid.resourcev1.PingReq) returns (saas.api.nodeid.resourcev1.PingResp) {
    option (google.api.http) = {
      get: "/api/v1/nodeid/ping/{message}"
    };
  }
  // 获取服务信息
  rpc GetServiceInfo(saas.api.nodeid.resourcev1.GetServiceInfoReq) returns (saas.api.nodeid.resourcev1.GetServiceInfoResp) {
    option (google.api.http) = {
      get: "/api/v1/nodeid/get-service-info"
      // body : "*"
    };
  }
  // 获取节点id
  rpc GetNodeId(saas.api.nodeid.resourcev1.GetNodeIdReq) returns (saas.api.nodeid.resourcev1.GetNodeIdResp) {
    option (google.api.http) = {
      get: "/api/v1/nodeid/get-one-node-id"
      // body : "*"
    };
  }
  // 续订节点id
  rpc RenewalNodeId(saas.api.nodeid.resourcev1.RenewalNodeIdReq) returns (saas.api.nodeid.resourcev1.RenewalNodeIdResp) {
    option (google.api.http) = {
      post: "/api/v1/nodeid/renewal-node-id"
      body: "*"
    };
  }
  // 释放节点id
  rpc ReleaseNodeId(saas.api.nodeid.resourcev1.ReleaseNodeIdReq) returns (saas.api.nodeid.resourcev1.ReleaseNodeIdResp) {
    option (google.api.http) = {
      put: "/api/v1/nodeid/release-node-id"
      body: "*"
    };
  }
}